names(data)
OTbyEmp<-select(data, Empleado, Total)
OTbyEmp<-select(data, Empleado)
str(data)
OTbyEmp<-select(data, Empleado:TOTAL)
?sselect
?select
install.packages("dplyr")
library("dplyr", lib.loc="~/R/win-library/3.2")
OTbyEmp<-select(data, Empleado, TOTAL)
class(OTbyEmp)
str(OTbyEmp)
head(OTbyEmp)
tail(OTbyEmp)
is.na(OTbyEmp)
OTEMP<-matrix(is.na(OTbyEmp))
OTEMP<-matrix([is.na(OTbyEmp)])
OTEMP<-na.omit(OTbyEmp)
dim(OTEMP)
head(OTEMP)
tail(OTEMP)
summary(OTEMP)
OTEMP
hist(OTEMP)
hist(OTEMP$Empleado)
hist(OTEMP$TOTAL)
OTByEmpTotal<-c(unique(Otemp$Empleado,Sum(otemp$TOTAL)))
OTByEmpTotal<-c(unique(OTEMP$Empleado,Sum(OTEMP$TOTAL)))
OTByEmpTotal<-c(unique(OTEMP$Empleado,sum(OTEMP$TOTAL)))
class(OTByEmpTotal)
OTByEmpTotal<-c(unique(OTEMP$Empleado),sum(OTEMP$TOTAL))
class(OTByEmpTotal)
OTByEmpTotal<-c(unique(OTEMP$Empleado))
rm(OTByEmpTotal)
OTByEmpTotal<-c(unique(OTEMP$Empleado))
OTByEmpTotal<-c(unique(OTEMP$Empleado),)
?c
OTByEmpTotal<-matrix(unique(OTEMP$Empleado),sum(OTEMP$TOTAL))
class(OTByEmpTotal)
head(OTByEmpTotal)
OTByEmpTotal
OTByEmpTotal<-matrix(unique(OTEMP$Empleado))
OTByEmpTotal
OTByEmpTotal<-matrix(unique(OTEMP$Empleado),sum(OTEMP$TOTAL))
TotalOT<-sum(OTEMP$TOTAL)
OTByEmpTotal<-matrix(lapply(unique(OTEMP$Empleado),sum(OTEMP$TOTAL)))
?lapply
OTByEmpTotal<-matrix(unique(OTEMP$Empleado),unique(sum(OTEMP$TOTAL)))
OTByEmpTotal<-lapply(OTEMP$Empleado,sum(OTEMP$TOTAL)
OTByEmpTotal<-lapply(OTEMP$Empleado,sum(OTEMP$TOTAL)
Emp<-c(OTEMP$Empleado)
Emp<-vector(OTEMP$Empleado)
Emp<-list(OTEMP$Empleado)
Emp
OTEMP<-na.omit(OTbyEmp$Empleado)
Emp<-na.omit(OTbyEmp$Empleado)
emp
Emp
dim(Emp)
class(Emp)
head(Emp)
OT<-na.omit(OTbyEmp$TOTAL)
EOT<-data.frame(cbind(Emp,OT))
OTEMP<-na.omit(unique(OTbyEmp$Empleado),OTbyEmp$TOTAL)
OTEMP
class(OTEMP)
OTEMP<-matrix(na.omit(unique(OTbyEmp$Empleado)),OTbyEmp$TOTAL)
hist(OTEMP)
?pivot
?pivottable
rm(list=ls())
help(trees)
cpv(trees$Height,trees$Volume)
cov(trees$Height,trees$Volume)
cov(trees)
cov(iris)
cov(iris[-5])
ls()
dir()
myData<-read.table("statisticians.txt")
class(myData)
dim(myData)
object.size(myData )
names(myData)
head(myData)
tail(myData)
summary(myData)
str(myData)
Table(myData$Var)
Table(myData$V1)
table(myData$V1)
table(myData$V2)
table(myData$V3)
read.table("statisticians.txt")
myData<-read.table("statisticians.txt")
class(myData)
dim(myData)
object.size(myData)
names(myData)
names(myData$V1="Index")
myData$V1<-"Index"
names(myData)
head(myData)
tail(myData)
str(myData)
summary(myData)
table(myData$V2)
read.table("FC-1GBA-Jul_Aug-OT.txt")
read.csv("FC-1GBA-Jul_Aug-OT.txt")
read.csv("FC-1GBA-Jul_Aug-OT.txt", sep=",")
read.csv("FC-1GBA-Jul_Aug-OT.csv", sep=",")
myData<-read.csv("FC-1GBA-Jul_Aug-OT.csv", sep=",")
summary(myData)
names(myData)
summary(myData$OT)
sd(myData$OT)
ks.test(myData$OT, "pnorm, 39, 25)
""
';'
ks.test(myData$OT, "pnorm", 39, 25)
ks.test(myData$OT, "norm", 39, 25)
?ks.test
ks.test(myData$OT, "rnorm", 39, 25)
ks.test(myData$OT, "dnorm", 39, 25)
ks.test(myData$OT, "dbnorm", 39, 25)
ks.test(myData$OT, "bnorm", 39, 25)
ks.test(myData$OT, "dpois", 39, 25)
ks.test(myData$OT, "pbinorm", 39, 25)
install.packages("randtests")
library("randtests", lib.loc="~/R/win-library/3.2")
bartels.rank.test(myData$OT, "two.sided", pvalue="normal")
mdat<-dnorm(0:80)
bartels.rank.test(mdat, "two.sided", pvalue="normal")
?dnorm
mdat<-dnorm(0:80, mean=39, sd=25)
mdat<-dnorm(24, mean=39, sd=25)
?sample
mdat<-sample(0:80, size=24)
bartels.rank.test(mdat, "two.sided", pvalue="normal")
bartels.rank.test(mdat, "two.sided", pvalue="normal")
bartels.rank.test(mdat, "two.sided", pvalue="normal)
myData<-read.csv("FC-1GBA-Jul_Aug-OT.csv", sep=",")
names("MyData")
names("myData")
myData<-read.csv("FC-1GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
names("myData")
class("mydata")
myData
bartels.rank.test(myData$OTMAND, "two.sided", pvalue="normal)
str(myData)
bartels.rank.test(myData$OTMAND, "two.sided", pvalue="normal")
bartels.rank.test(myData$OT, "two.sided", pvalue="normal")
bartels.rank.test(mdat, "two.sided", pvalue="normal)
bartels.rank.test(mdat, "two.sided", pvalue="normal")
mdat<-sample(0:80, size=24)
bartels.rank.test(mdat, "two.sided", pvalue="normal")
bartels.rank.test(myData$OT, "two.sided", pvalue="normal")
bartels.rank.test(myData$OT, "two.sided", pvalue="normal")
bartels.rank.test(myData$OTMAND, "two.sided", pvalue="normal")
ks.test(myData$OT, "pnorm", 39, 25)
ks.test(myData$OTMAND, "pnorm", 39, 25)
summary(myData$OT)
sd(myData$OT)
ks.test(myData$OT, "pnorm", 72, 38)
ks.test(myData$OTMAND, "pnorm", 39, 25)
ks.test(myData$OTMAND, mdat)
mdat1<-sample(0:180, size=24)
ks.test(myData$OT, mdat1)
ks.test(myData$OTMAND, "norm", 39, 25)
ks.test(myData$OTMAND, "pbinom", 39, 25)
ks.test(myData$OT, "pbinom", 72, 38)
ks.test(myData$OT, "ppois", 72, 38)
ks.test(myData$OT, "pgeom", 72, 38)
ks.test(myData$OT, "pt", 72, 38)
ks.test(myData$OT, "plnorm", 72, 38)
ks.test(myData$OT, "pexp", 72, 38)
ks.test(myData$OT, "pchisq", 72, 38)
ks.test(myData$OT, "pbinom", 72, 38)
ks.test(myData$OT, "pbeta", 72, 38)
ks.test(myData$OT, "pnorm", 72, 38)
ks.test(myData$OT, "ppois", 72, 38)
t.test(myData$OT)
t.test(myData$OT, conf.level=0.99)
t.test(myData$OTMAND, conf.level=0.99)
t.test(myData$OTMAND)
lm(myData$OT~myData$OTMAND)
summary(lm(myData$OT~myData$OTMAND))
plot(myData$OT)
plot(myData$OT, myData$OTMAND)
summary(myData$OT)
myData<-read.csv("FC-2GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
my2Data<-read.csv("FC-2GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
my1Data<-read.csv("FC-1GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
summary(myData$OT)
summary(my1Data$OT)
summary(my2Data$OT)
plot(my1Data$OT, myData2$OT)
plot(myData1$OT, myData2$OT)
plot(my1Data$OT, my2Data$OT)
rm(my1Data)
rm(my2Data)
rm(myData)
rm(mdat)
rm(mdat1)
my2Data<-read.csv("FC-2GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
my1Data<-read.csv("FC-1GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
my1Data<-read.csv("FC-1GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
plot(my1Data$OT, my2Data$OT)
summary(my2Data$OT)
summary(my1Data$OT)
ks.test(my1Data$OT, my2Data$OT)
summary(my2Data$OT)
t.test(my2Data$OT)
my3Data<-read.csv("FC-3GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
mData<-paste(my1Data,my2Data,my3Data)
dim(myData)
dim(mData)
mDta
mData
?"stack"
mData<-stack(my1Data,my2Data,my3Data)
mData<-stack(my1Data$OT,my2Data$OT,my3Data$OT)
mData<-c(my1Data$OT,my2Data$OT,my3Data$OT)
summary(mData)
t.test(myData)
t.test(mData)
shapiro.test(mData)
histogram(mData)
?histogram
?hist
hist(mData)
ks.test(mData,"pnorm",65.57, 9.86)
ks.test(mData,"pnorm",66, 10)
my4Data<-read.csv("FC-4GBA-Jul_Aug-OT.csv", sep=",", header = TRUE)
mData<-c(my1Data$OT,my2Data$OT,my3Data$OT,my4Data$OT)
mDataFrame<-stack(my1Data,my2Data,my3Data,my4Data)
mDataFrame<-rbind(my1Data,my2Data,my3Data,my4Data)
class(mDataFrame)
dim(mDataFrame)
head(mDataFrame)
tail(mDataFrame)
summary(mDataFrame)
str(mDataFrame)
save(mDataFrame,file="GBA1-4Jul-Aug.rda")
rm(mDataFrame)
mDataFrame<-load("GBA1-4Jul-Aug.rda")
str(mDataFrame)
summary(mDataFrame)
mDataFrame<-rbind(my1Data,my2Data,my3Data,my4Data)
dump("GBA1-4Jul-Aug.R")
mdataFrm<-load("GBA1-4Jul-Aug.R")
mdataFrm<-read("GBA1-4Jul-Aug.R")
mdataFrm<-source("GBA1-4Jul-Aug.R")
mdataFrm<-dget("GBA1-4Jul-Aug.R")
dump(mDataFrame, "GBA1-4Jul-Aug.R")
?dump
dump(mDataFrame, file="GBA1-4Jul-Aug.R")
dump(mData, file="GBA1-4Jul-Aug.R")
names(mDataFrame)
write.csv(mDataFrame, "GBA1-4Jul-Aug.R")
read.csv(mDataFrame1, "GBA1-4Jul-Aug.R")
mDataFrame1<-read.csv("GBA1-4Jul-Aug.csv")
?write.csv
write.csv(mDataFrame, file="GBA1-4Jul-Aug1.csv")
rm(mDataFrame1)
?read.csv
sm<-read.table("SMperMWAvg", Header=TRUE)
sm<-read.table("SMperMWAvg.txt", Header=TRUE)
sm<-read("SMperMWAvg.txt", Header=TRUE)
sm<-read.table("SMperMWAvg.txt", Header=TRUE)
sm<-read.table("SMperMWAvg.txt")
sm<-read.table("SMperMWAvgp.txt", Header=TRUE)
sm<-read.table("SMperMWAvgp.txt")
sm<-read.table("SMperMWp-Avg.txt")
sm
sm<-read.table("SMperMWp-Avg.txt", header = T)
sm
summary(sm)
t.test(sm)
help()
?confint
confint(sm,level = 0.95)
confint(sm,parm=sm ,level = 0.95)
confint(parm=sm ,level = 0.95)
araoc<-read.table("AR-AvgOilChangeInterval.txt")
summary(araoc)
summary(araoc$V2)
dim(araoc)
class(araoc)
str(araoc)
araoc<-read.table("AR-AvgOilChangeInterval.txt", header=T)
str(araoc)
names(araoc)
str(araoc)
summary(araoc$V2)
summary(araoc$AvgOilChangeInterval)
aroci<-c(araoc$AvgOilChangeInterval<1000)
aroci
aroci<-c(araoc[araoc$AvgOilChangeInterval<1000])
aroci<-c(araoc[c(araoc$AvgOilChangeInterval<1000)]
aroci<-c(araoc[c(araoc$AvgOilChangeInterval<1000)])
aroci<-c(araoc[araoc$AvgOilChangeInterval<1000)])
aroci<-c(araoc[araoc$AvgOilChangeInterval<1000])
arocil<-c(araoc$AvgOilChangeInterval<1000)
aroci<-araoc$AvgOilChangeInterval[arocil==TRUE]
aroci
arocil<-c(araoc$AvgOilChangeInterval<1000 or araoc$AvgOilChangeInterval==0)
names(aroci)
head(aroci)
aro<-aroci[!=0]
aro<-aroci[aroci[]!=0]
aro
head(aro)
summary(aro)
sd(aro)
t.test(aro)
confint(aro)
?Intervals
?Interval
cor.test(aro)
x<-4
class(x)
x<-c(4,"a", TRUE)
class(x)
x
x<-c(1,3,5)
y<-c(3,2,10)
rbind(x,y)
z<-rbind(x,y)
class(z)
z
str(z)
x <- list(2, "a", "b", TRUE)
x
x[[2]]
rm(list=ls())
x <- 1:4
y <- 2:3
z<-x+y
z
x
y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x>10]<-4
x
read.csv("hw1_data.csv", header=TRUE)
getwd
getwd()
setwd("C:\Users\miguehida\Documents\GitHub\datasciencecoursera\RProgramming")
setwd("RProgramming")
getwd()
read.csv("hw1_data.csv", header=TRUE)
hw1<-read.csv("hw1_data.csv", header=TRUE)
head(hw1)
nrows(hw1)
nrow(hw1)
tail(hw1)
hw1$Ozone[47]
bad<-complete.cases(hw1)
bad<-!complete.cases(hw1)
mv<-hw1[bad,]
good<-complete.cases(hw1)
nmv<-hw1[good,]
111+42
mvhw1<-is.na(hw1)
mvlhw1<-is.na(hw1)
mvhw1<-hw1[mvlhw1,]
rm(list=ls())
read.csv("hw1_data.csv", header=TRUE)
hw1<-read.csv("hw1_data.csv", header=TRUE)
good<-is.na(hw1$Ozone)
gv<-hw1[good,]
bad<-is.na(hw1$Ozone)
gv<-hw1[bad,]
gv
good<-!is.na(hw1$Ozone)
gv<-hw1[good,]
gv
m<-mean(gv$Ozone)
m
q18<-hw1[(hw1$Ozone>31) & (hw1$Temp>90),]
q18
srm<-mean(q18$Solar.R)
srm
good<-!is.na(q18)
q18<-q18[good,]
q18
good<-is.na(q18)
q18<-q18[good,]
q18
rm(list=ls())
hw1<-read.csv("hw1_data.csv", header=TRUE)
q18<-hw1[(hw1$Ozone>31) & (hw1$Temp>90),]
q18
?mean
srm<-mean(q18$Solar.R, na.rm=TRUE)
srm
q19<-hw1[(hw1$Month==6),]
q19
srm<-mean(q19$Temp, na.rm=TRUE)
srm
q20<-hw1[(hw1$Month==5),]
q20
srm<-summary(q19$Ozone, na.rm=TRUE)
srm
srm<-summary(q20$Ozone, na.rm=TRUE)
srm
source('~/GitHub/datasciencecoursera/RProgramming/pollutantmean.R')
pollutantmean("specdata", 1)
pollutantmean("specdata", "nitrate"", 1)
pollutantmean("specdata", "nitrate", 1)
pollutantmean("specdata", "nitrate", 1:39)
getOption()
getOption("prompt")
setOption(prompt("## "))
setOption(prompt="## ")
?setoption
?getOption
?options
options(prompt = "## ")
pollutantmean("specdata", "nitrate", 1:39)
options(prompt = "> ")
op<-options()
op
source('~/GitHub/datasciencecoursera/RProgramming/pollutantmean.R')
pollutantmean("specdata", "nitrate", 1:39)
id_commands <- grep("^> |^\\+ ",to_edit)
to_edit<-NULL
id_commands <- grep("^> |^\\+ ",to_edit)
to_edit[id_commands] <- sub("^> |^\\+ ","",to_edit[id_commands])
to_edit[-id_commands] <- paste("#",to_edit[-id_commands])
writeLines(to_edit)
head(op)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
?cor
source('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",150)
files.list("specdata")
file.list("specdata")
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",150)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",150)
corr("specdata",110)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
rm(list=ls())
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
cr<-cor(myPassedDataSet$sulfate, myPassedDataSet$nitrate)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
n
for (i in 1:lenght(myFList) {
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
head(myPassedDataSet)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
debugSource('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
Source('~/GitHub/datasciencecoursera/RProgramming/corr.R')
source('~/GitHub/datasciencecoursera/RProgramming/corr.R')
corr("specdata",110)
cr<-corr("specdata",110)
head(cr)
summary(cr)
source('~/GitHub/datasciencecoursera/RProgramming/corr.R')
cr<-corr("specdata",110)
head(cr)
source('~/GitHub/datasciencecoursera/RProgramming/corr.R')
cr<-corr("specdata",110)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
Miami#69
submit()
submit()
source('~/GitHub/datasciencecoursera/RProgramming/rprog_scripts_submitscript1.R')
submit(resetLogin = TRUE)
source('C:/Users/miguehida/datasciencecoursera/Rprogramming/rprog_scripts_submitscript1.R')
submit()
submit()
submit()
source('C:/Users/miguehida/datasciencecoursera/Rprogramming/complete.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
